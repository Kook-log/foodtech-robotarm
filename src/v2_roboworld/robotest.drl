def grip():
    set_digital_outputs([-1, -2, -3, -4, -5])
    wait(1)
    set_digital_output(4)
   
def grip_bread():
    set_digital_outputs([-1, -2, -3, -4, -5])
    wait(1)
    set_digital_output(2)

def grip_tool():
    set_digital_outputs([-1, -2, -3, -4, -5])
    wait(1)
    set_digital_output(1)

def full_open():
    set_digital_outputs([-1, -2, -3, -4, -5])
    wait(1)
    set_digital_output(3)
    
def workspace():
    movej(posj(-7.74, -24.42, 93.28, -2.35, 81.35, -0.91), 80,80)

def bread_pos1():
    movej(posj(-5.59, 16.61, 57.5, -3.22, 82.29, 1.17), 80, 80) #1번 식빵 위치
    grip_bread()
    wait(1)
    
    # 1번 식빵
    movesx([
    posx(537.73, -67.28, 433.46, 168.26, -147.91, 176.01),     # 잡고 나오기
    posx(591.87, -175.26, 422.82, 126.47, -135.44, 131.27),  # 철판 근처
    posx(600.54, -355.42, 273.05, 107.63, -125.76, 102.9), # 철판 위
    posx(590.07, -340.97, 234.61, 112.64, -130.63, 105.73)  # 1번 포지션 위
    ], 80, 80, t=3)
    
    '''
    movej(posj(-5.6, 5.6, 53.52, -3.22, 88.93, 1.17), 80, 80) #식빵 잡고 나오기
    movej(posj(2.36, 15.07, 52.08, -35.63, 85.02, 1.17), 80, 80) # 철판 근처
    movej(posj(-7.07, 25.65, 68.36, -52.78, 67.65, 1.17),80, 80) # 철판 위
    movej(posj(-8.87, 22.38, 75.45, -47.55, 61.14, 0.17),80,80) # 1번 포지션 위
    '''
    grip_tool() 
    wait(1)
    
    movesx([
    posx(579.14, -214.35, 290.26, 113.13, -130.97, 102.63),     # 놓고 나오기
    posx(549.09, -135.3, 391.76, 143.94, -134.7, 141.38),  # 안전지대
    ], 80, 80, t=4)

def bread_pos2():
    movej(posj(-30.81, 9.86, 73.81, 17.47, 66.65, -28.38),80,80) # 2번 식빵
    
    
    """
    movej(posj(3.04, 15.27, 76.18, -47.52, 73.92, 0.17), 80, 80) # 놓고 나오기
    movej(posj(1.14, -1.2, 76.3, -27.47, 68.47, 0.17),80,80) # 안전 지대
    movej(posj(-30.81, 9.86, 73.81, 17.47, 66.65, -28.38),80,80) # 2번 식빵
    """
    
    grip_bread()
    wait(0.8)
    
    movesx([
    posx(567.41, -212.2, 376.02, 177.6, -142.52, -177.01),     # 잡고 나오기
    posx(450.15, -182.99, 347.56, 118.32, -116.38, 102.54),  # 철판 근처
    posx(405.77, -322.9, 256.63, 117.94, -115.14, 97.77), # 철판 위
    posx(400.72, -326.54, 208.05, 119.23, -120.1, 99.66)  # 2번 포지션 위
    ], 80, 80, t=3)
    
    grip_tool()
    wait(0.8)
    
    #movej(posj(9.93, -19.4, 110.72, -55.36, 72.47, 13.5),80,80) # 2번 놓고 나오기
    movesx([
    posx(374.24, -209.94, 319.73, 120.05, -123.34, 113.82), # 놓고 나오기
    posx(549.09, -135.3, 391.76, 143.94, -134.7, 141.38),  # 안전지대
    ], 80, 80, t=3)
    
    
def bread_pos3():
   
    movesx([
    posx(569.06, -128.42, 386.9, 167.81, -145.77, 168.65), # 3번 식빵 위
    posx(605.55, -135.37, 302.08, 168.88, -152.3, 169.85) # 3번 식빵
    ], 80, 80, t=3)
    
    grip_bread()
    wait(0.8)
    
    movesx([
    posx(549.02, -120.59, 369.96, 165.35, -132.85, 163.43),# 3번 식빵 들고 나오기
    posx(315.27, -159.5, 400.13, 119.28, -134.79, 101.34), # 철판 근처
    posx(272.89, -288.96, 285.9, 105.99, -116.09, 97.54), # 철판 위
    posx(275.68, -311.62, 211.35, 104.93, -124.21, 100.21) # 3번 식빵 철판 위에 놓기
    ], 80, 80, t=4)
    
    grip_tool()
    wait(0.8)
    
    movej(posj(7.96, -21.86, 113.59, -51.39, 84.53, 11.19),80,80)
    
    workspace()
    
    
    
    
def main():
    port = 20000
    tp_log("서버 대기 시작... (여러 주문 순차 처리 가능)")

    try:
        while True:
            # 1️⃣ 새 연결 대기
            sock = server_socket_open(port)
            tp_log("클라이언트 연결 대기 중...")

            # 2️⃣ 데이터 수신
            res, rx_data = server_socket_read(sock, length=64, timeout=-1)
            if res > 0:
                customer_name = rx_data.decode().strip()
                tp_log("수신된 이름: " + customer_name)

                # 3️⃣ 로봇 동작 수행
                workspace()
                #bread_pos1()
                #bread_pos2()
                #bread_pos3()
                tp_log("주문 동작 완료")

                # 4️⃣ 응답 전송
                server_socket_write(sock, b"DONE," + customer_name.encode())
                tp_log("응답 전송 완료: " + customer_name)

            # 5️⃣ 연결 종료 후 다음 주문 대기
            server_socket_close(sock)
            tp_log("연결 종료 — 다음 주문 대기 중...")
            wait(0.2)

    except:
        tp_log("오류 발생, 서버 종료 시도")
    finally:
        tp_log("서버 종료")
main()